<?xml version="1.0" encoding="utf-8" ?>

<component name="MainScene" extends="Scene" initialFocus="downloadLabelList">

  <script type="text/brightscript">

    <![CDATA[

    sub init()
      m.state = "downloads"

      m.top.backgroundURI = "pkg:/images/rsgde_bg_hd.jpg"

      m.labelList = m.top.findNode("downloadLabelList")
      m.videoPlayer = m.top.findNode("videoPlayer")

      m.top.removeChild(m.videoPlayer)

      m.readListTask = createObject("roSGNode", "DownloadListReader")
      m.readListTask.observeField("downloadList", "showDownloadList")
      m.readListTask.downloadsUri = "https://BASE_DOMAIN/api/downloads"
      m.readListTask.control = "RUN"

      m.timestampURL = ""
      m.videoPlayer.notificationInterval = 15.0
      m.videoPlayer.observeField("position", "updateVideoTimestamp")
    end sub

    function onKeyEvent(key as String, press as Boolean) as Boolean
      if press then
        if key = "back" then
          if m.state = "files" then
            showDownloadList()
            return true
          else if m.state = "playing" then
            stopPlaying()
            return true
          end if
        else if key = "OK" then
          itemSelected()
          return true
        end if
      end if
      return false
    end function

    sub itemSelected()
      idx = m.labelList.itemSelected
      if m.state = "downloads"
        hash = m.readListTask.downloadHashes[idx]
        m.readFilesTask = createObject("roSGNode", "FileListReader")
        m.readFilesTask.observeField("fileList", "showFileList")
        m.readFilesTask.hash = hash
        m.readFilesTask.control = "RUN"
      else if m.state = "files"
        title = m.readFilesTask.fileList.getChild(idx).title
        videoUrl = m.readFilesTask.fileUrls[idx]
        timestamp = m.readFilesTask.timestamps[idx]
        timestampURL = m.readFilesTask.timestampURLs[idx]
        playVideo(idx, title, videoUrl, timestamp, timestampURL)
      end if
    end sub

    sub showDownloadList()
      m.state = "downloads"
      showContent(m.readListTask.downloadList)
    end sub

    sub showFileList(updated)
      m.state = "files"
      showContent(m.readFilesTask.fileList)
    end sub

    sub showContent(content)
      m.labelList.content = content

      rect = m.labelList.boundingRect()
      centerX = (1280 - rect.width) / 2
      centerY = (720 - rect.height) / 2
      m.labelList.translation = [centerX, centerX]
      m.labelList.setFocus(true)
    end sub

    sub playVideo(fileIdx, title, url, timestamp, timestampURL)
      m.state = "playing"
      m.playingFileIndex = fileIdx
      m.timestampURL = timestampURL

      videoContent = createObject("RoSGNode", "ContentNode")
      videoContent.url = url
      videoContent.title = title

      m.top.appendChild(m.videoPlayer)
      m.top.removeChild(m.labelList)
      m.videoPlayer.content = videoContent
      m.videoPlayer.seek = timestamp
      m.videoPlayer.control = "play"
      m.videoPlayer.setFocus(true)
    end sub

    sub updateVideoTimestamp()
      if m.timestampURL <> ""
        position = m.videoPlayer.position
        m.updateTimestampTask = createObject("roSGNode", "TimestampSetter")
        m.updateTimestampTask.baseURL = m.timestampURL
        m.updateTimestampTask.timestamp = position
        m.updateTimestampTask.control = "RUN"

        REM if the user goes back to the files list, and then
        REM starts playing this video again, it should resume
        REM from the correct timestamp.
        m.readFilesTask.callFunc("updateTimestamp", m.playingFileIndex, position)
      end if
    end sub

    sub stopPlaying()
      m.state = "files"

      m.timestampURL = ""
      m.videoPlayer.control = "stop"
      m.top.removeChild(m.videoPlayer)
      m.top.appendChild(m.labelList)
      m.labelList.setFocus(true)
    end sub

    ]]>

  </script>

  <children>

    <LabelList id="downloadLabelList" itemSize="[600,92]" />
    <Video id="videoPlayer" />

  </children>

</component>
